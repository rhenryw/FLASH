Name: features-grid
CSS: |
  [data-bit="features-grid"] {
    padding: 5rem 2rem;
    background: linear-gradient(180deg, #0B0B0F 0%, #0f0f15 50%, #0B0B0F 100%);
    position: relative;
    width: 100%;
  }
  [data-bit="features-grid"] .container {
    max-width: 1200px;
    margin: 0 auto;
  }
  [data-bit="features-grid"] .section-title {
    text-align: center;
    font-size: clamp(2rem, 5vw, 3rem);
    font-weight: 700;
    color: #e2e8f0;
    margin-bottom: 3rem;
    position: relative;
  }
  [data-bit="features-grid"] .section-title::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 4px;
    background: linear-gradient(45deg, #667eea, #764ba2);
    border-radius: 2px;
  }
  [data-bit="features-grid"] .grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
    margin-top: 3rem;
  }
  [data-bit="features-grid"] .feature-card {
    background: rgba(20, 20, 30, 0.4);
    padding: 2.5rem;
    border-radius: 20px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.5);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
    border: 1px solid rgba(102, 126, 234, 0.2);
    backdrop-filter: blur(10px);
    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUp 0.6s ease forwards;
  }
  [data-bit="features-grid"] .feature-card:nth-child(1) { animation-delay: 0.1s; }
  [data-bit="features-grid"] .feature-card:nth-child(2) { animation-delay: 0.2s; }
  [data-bit="features-grid"] .feature-card:nth-child(3) { animation-delay: 0.3s; }
  [data-bit="features-grid"] .feature-card:nth-child(4) { animation-delay: 0.4s; }
  [data-bit="features-grid"] .feature-card:nth-child(5) { animation-delay: 0.5s; }
  [data-bit="features-grid"] .feature-card:nth-child(6) { animation-delay: 0.6s; }
  
  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  [data-bit="features-grid"] .feature-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(90deg, #667eea, #764ba2);
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.5s ease;
  }
  [data-bit="features-grid"] .feature-card:hover {
    transform: translateY(-15px) scale(1.02);
    box-shadow: 0 20px 50px rgba(102, 126, 234, 0.3);
    border-color: rgba(102, 126, 234, 0.5);
    background: rgba(25, 25, 40, 0.6);
  }
  [data-bit="features-grid"] .feature-card:hover::before {
    transform: scaleX(1);
  }
  [data-bit="features-grid"] .feature-icon {
    width: 70px;
    height: 70px;
    margin-bottom: 1.5rem;
    background: linear-gradient(135deg, rgba(102, 126, 234, 0.3), rgba(118, 75, 162, 0.3));
    border-radius: 15px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 2rem;
    position: relative;
    overflow: hidden;
    border: 1px solid rgba(102, 126, 234, 0.4);
    transition: all 0.4s ease;
  }
  [data-bit="features-grid"] .feature-icon::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(45deg, transparent, rgba(102, 126, 234, 0.4), transparent);
    transform: rotate(45deg);
    transition: all 0.6s ease;
    opacity: 0;
  }
  [data-bit="features-grid"] .feature-card:hover .feature-icon {
    transform: scale(1.1) rotate(5deg);
    background: linear-gradient(135deg, rgba(102, 126, 234, 0.5), rgba(118, 75, 162, 0.5));
    box-shadow: 0 0 30px rgba(102, 126, 234, 0.5);
  }
  [data-bit="features-grid"] .feature-card:hover .feature-icon::before {
    opacity: 1;
    animation: shine 0.6s ease;
  }
  @keyframes shine {
    0% { transform: translateX(-100%) rotate(45deg); }
    100% { transform: translateX(100%) rotate(45deg); }
  }
  [data-bit="features-grid"] .feature-title {
    font-size: 1.5rem;
    font-weight: 700;
    color: #e2e8f0;
    margin-bottom: 1rem;
    transition: color 0.3s ease;
  }
  [data-bit="features-grid"] .feature-card:hover .feature-title {
    color: #ffffff;
  }
  [data-bit="features-grid"] .feature-description {
    color: #94a3b8;
    line-height: 1.8;
    font-size: 1rem;
    transition: color 0.3s ease;
  }
  [data-bit="features-grid"] .feature-card:hover .feature-description {
    color: #cbd5e1;
  }
  [data-bit="features-grid"] .stats-section {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    padding: 4rem 2rem;
    margin-top: 4rem;
    border-radius: 20px;
    color: white;
    text-align: center;
    box-shadow: 0 8px 32px rgba(102, 126, 234, 0.3);
    position: relative;
    overflow: hidden;
  }
  [data-bit="features-grid"] .stats-section::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(circle at 30% 50%, rgba(255, 255, 255, 0.1) 0%, transparent 50%);
    pointer-events: none;
  }
  [data-bit="features-grid"] .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 2rem;
    max-width: 800px;
    margin: 0 auto;
    position: relative;
    z-index: 1;
  }
  [data-bit="features-grid"] .stat-item {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.6s ease forwards;
  }
  [data-bit="features-grid"] .stat-number {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
    background: linear-gradient(45deg, #ffffff, #f0f0f0);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
  [data-bit="features-grid"] .stat-label {
    font-size: 1rem;
    opacity: 0.9;
  }
  @keyframes shine {
    0% { transform: translateX(-100%) translateY(-100%) rotate(45deg); }
    100% { transform: translateX(100%) translateY(100%) rotate(45deg); }
  }
  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
JS: |
  const { container, config, utils } = ctx;

  const containerDiv = document.createElement('div');
  containerDiv.className = 'container';

  // Section title
  if (config.title) {
    const title = document.createElement('h2');
    title.className = 'section-title';
    title.textContent = config.title;
    containerDiv.appendChild(title);
  }

  // Features grid
  if (config.features && Array.isArray(config.features)) {
    const grid = document.createElement('div');
    grid.className = 'grid';

    config.features.forEach((feature, index) => {
      const card = document.createElement('div');
      card.className = 'feature-card';

      const icon = document.createElement('div');
      icon.className = 'feature-icon';
      icon.textContent = feature.icon || 'âœ¨';

      const title = document.createElement('h3');
      title.className = 'feature-title';
      title.textContent = feature.title || 'Feature';

      const description = document.createElement('p');
      description.className = 'feature-description';
      description.textContent = feature.description || 'Feature description';

      card.appendChild(icon);
      card.appendChild(title);
      card.appendChild(description);
      grid.appendChild(card);
    });

    containerDiv.appendChild(grid);
  }

  container.appendChild(containerDiv);
